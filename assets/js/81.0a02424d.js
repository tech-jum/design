(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{476:function(t,a,r){"use strict";r.r(a);var v=r(15),_=Object(v.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"秒杀系统设计"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#秒杀系统设计"}},[t._v("#")]),t._v(" 秒杀系统设计")]),t._v(" "),r("p",[t._v("秒杀系统所要应对的场景就是："),r("strong",[t._v("瞬时海量请求")]),t._v("。")]),t._v(" "),r("h2",{attrs:{id:"秒杀系统的难点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#秒杀系统的难点"}},[t._v("#")]),t._v(" 秒杀系统的难点")]),t._v(" "),r("ul",[r("li",[t._v("高并发：秒杀系统是极致的高并场景发自不用说。其高并发可以细分为二：\n"),r("ul",[r("li",[t._v("并发读：主要是读取剩余库存量以及商品信息")]),t._v(" "),r("li",[t._v("并发写：主要是下单后，系统写入订单记录")])])]),t._v(" "),r("li",[t._v("超卖：秒杀系统中售卖的商品一般都是性价比很高，不怎么赚钱，甚至赔钱赚哟喝的商品。一旦出现超卖现象，会给商家带来巨大的经济损失。从系统层面来看，比如某秒杀商品本来库存 100 件，但是在高并发场景下，瞬时下单量超过 100 件，处理不当，让这些下单都成功了，就会出现超卖。")]),t._v(" "),r("li",[t._v("恶意请求：有些人为了低价购入秒杀商品，通过在多台机器上跑脚本，模拟大量用户抢商品的请求（走自己的路，让别人无路可走）。")]),t._v(" "),r("li",[t._v("数据库崩溃：海量请求下，如果没有 MQ 削峰，没有过载保护，让所有请求都打到数据库，那么数据库基本就挂了。数据库如果挂了，也会波及其他业务，从而可能让整个系统、网站陷入瘫痪。")]),t._v(" "),r("li",[t._v("对现有业务造成冲击")])]),t._v(" "),r("h2",{attrs:{id:"秒杀系统的思考"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#秒杀系统的思考"}},[t._v("#")]),t._v(" 秒杀系统的思考")]),t._v(" "),r("h3",{attrs:{id:"稳准快"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#稳准快"}},[t._v("#")]),t._v(" 稳准快")]),t._v(" "),r("p",[t._v("秒杀系统架构的思考角度可以概括为："),r("strong",[t._v("稳、准、快")])]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("稳（高可用）")]),t._v("：系统架构要满足高可用，系统要能撑住活动。")]),t._v(" "),r("li",[r("strong",[t._v("准（一致性）")]),t._v("：商品减库存方式非常关键，不能出现超卖。")]),t._v(" "),r("li",[r("strong",[t._v("快（高性能）")]),t._v("：整个请求链路，从前端到后端，依赖组件都要做到协同优化。")])]),t._v(" "),r("p",[r("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/snap/20200720073346.png",alt:"img"}})]),t._v(" "),r("h2",{attrs:{id:"前端优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#前端优化"}},[t._v("#")]),t._v(" 前端优化")]),t._v(" "),r("h3",{attrs:{id:"静态页面"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#静态页面"}},[t._v("#")]),t._v(" 静态页面")]),t._v(" "),r("p",[t._v("把秒杀商品页面静态化，减少查数据库的 IO 开销。然后，可以将这些静态页面做 CDN 缓存，如果项目是前后端分离的，还可以在反向代理服务器侧设置静态缓存。")]),t._v(" "),r("p",[t._v("如每个商品都由 ID 来标识，那么 http://item.xxx.com/item.htm?id=xxxx 就可以作为唯一的 URL 标识。相应的页面可以提前做前端缓存，这样就不需要向后台查询商品信息。")]),t._v(" "),r("h3",{attrs:{id:"按钮控制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#按钮控制"}},[t._v("#")]),t._v(" 按钮控制")]),t._v(" "),r("p",[t._v("在秒杀活动开启时间前，下单按钮禁用。")]),t._v(" "),r("p",[t._v("此外，按钮一旦点击之后，禁用一段时间，防止有人疯狂输出。")]),t._v(" "),r("h2",{attrs:{id:"后端优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#后端优化"}},[t._v("#")]),t._v(" 后端优化")]),t._v(" "),r("h3",{attrs:{id:"隔离"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#隔离"}},[t._v("#")]),t._v(" 隔离")]),t._v(" "),r("p",[t._v("秒杀活动，本质上还是一个营销活动，性质和打折、促销一样。")]),t._v(" "),r("p",[t._v("秒杀系统设计底线原则，是不应该影响现有业务。所以，为了避免防不胜防，百密一疏的情况下，秒杀系统崩了。")]),t._v(" "),r("h3",{attrs:{id:"限流、熔断、降级、隔离"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#限流、熔断、降级、隔离"}},[t._v("#")]),t._v(" 限流、熔断、降级、隔离")]),t._v(" "),r("ul",[r("li",[r("p",[r("strong",[t._v("隔离")]),t._v("：将秒杀系统、数据与其他正常业务隔离。彼此隔离，自然互不影响。")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("限流")]),t._v("：设置阈值，超过阈值，拒绝请求。防止数据库被打死。")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("降级")]),t._v("：保证核心业务继续工作，非核心业务各安天命。")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("熔断")]),t._v("：不要影响别的系统。")])])]),t._v(" "),r("h3",{attrs:{id:"缓存"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#缓存"}},[t._v("#")]),t._v(" 缓存")]),t._v(" "),r("p",[t._v("缓存要预热，避免瞬间流量冲击。")]),t._v(" "),r("p",[t._v("此外，防止雪崩、穿透、击穿问题的常规处理要做好。")]),t._v(" "),r("p",[t._v("缓存也要保证高可用。")]),t._v(" "),r("h3",{attrs:{id:"流量削峰"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#流量削峰"}},[t._v("#")]),t._v(" 流量削峰")]),t._v(" "),r("p",[t._v("削峰的思路：排队、答题、分层过滤。")]),t._v(" "),r("ul",[r("li",[t._v("排队：用消息队列来缓冲瞬时流量的方案。但是，消息队列自身也有上限，如果积压过多，也会处理不了。")]),t._v(" "),r("li",[t._v("答题（摇一摇）：可以限制秒杀器并延缓请求。")]),t._v(" "),r("li",[t._v("分层过滤：采用漏斗式的设计尽可能拦截无效请求。")])]),t._v(" "),r("p",[r("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/snap/20200720094300.png",alt:"img"}})]),t._v(" "),r("h3",{attrs:{id:"减库存"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#减库存"}},[t._v("#")]),t._v(" 减库存")]),t._v(" "),r("h4",{attrs:{id:"恶意下单"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#恶意下单"}},[t._v("#")]),t._v(" 恶意下单")]),t._v(" "),r("p",[t._v("恶意下单的解决方案还是要结合安全和反作弊措施来制止：")]),t._v(" "),r("ul",[r("li",[t._v("识别频繁下单不付款或重复下单不付款的卖家，阻断其下单。")]),t._v(" "),r("li",[t._v("限制个人购买数")])]),t._v(" "),r("h4",{attrs:{id:"避免超卖"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#避免超卖"}},[t._v("#")]),t._v(" 避免超卖")]),t._v(" "),r("p",[t._v("减库存在数据一致性上，主要就是保证大并发请求时库存数据不能为负数，也就是要保证数据库中的库存字段值不能为负数，一般我们有多种解决方案：一种是在应用程序中通过事务来判断，即保证减后库存不能为负数，否则就回滚；另一种办法是直接设置数据库的字段数据为无符号整数，这样减后库存字段值小于零时会直接执行 SQL 语句来报错；再有一种就是使用 CASE WHEN 判断语句，例如这样的 SQL 语句：")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("UPDATE item SET inventory = CASE WHEN inventory >= xxx THEN inventory-xxx ELSE inventory END\n")])])]),r("p",[t._v("在交易环节中，“库存”是个关键数据，也是个热点数据，因为交易的各个环节中都可能涉及对库存的查询。但是，我在前面介绍分层过滤时提到过，秒杀中并不需要对库存有精确的一致性读，把库存数据放到缓存（Cache）中，可以大大提升读性能。")]),t._v(" "),r("h3",{attrs:{id:"url-动态化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#url-动态化"}},[t._v("#")]),t._v(" URL 动态化")]),t._v(" "),r("p",[t._v("通过 MD5 之类的加密算法加密随机的字符串去做 url，然后通过前端代码获取 url 后台校验才能通过。")]),t._v(" "),r("h2",{attrs:{id:"参考资料"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://time.geekbang.org/column/intro/127",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何设计一个秒杀系统"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://segmentfault.com/a/1190000020970562",target:"_blank",rel:"noopener noreferrer"}},[t._v("一个秒杀系统的设计思考"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=_.exports}}]);