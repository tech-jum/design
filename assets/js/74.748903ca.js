(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{468:function(t,s,a){"use strict";a.r(s);var n=a(15),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("blockquote",[a("p",[t._v("翻译自：https://sourcemaking.com/refactoring/smells/oo-abusers")]),t._v(" "),a("p",[a("strong",[t._v("滥用面向对象(Object-Orientation Abusers)这组坏味道意味着：代码部分或完全地违背了面向对象编程原则。")])])]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#switch-%E5%A3%B0%E6%98%8E"}},[t._v("Switch 声明")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E9%97%AE%E9%A2%98%E5%8E%9F%E5%9B%A0"}},[t._v("问题原因")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95"}},[t._v("解决方法")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E6%94%B6%E7%9B%8A"}},[t._v("收益")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E4%BD%95%E6%97%B6%E5%BF%BD%E7%95%A5"}},[t._v("何时忽略")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E9%87%8D%E6%9E%84%E6%96%B9%E6%B3%95%E8%AF%B4%E6%98%8E"}},[t._v("重构方法说明")])])])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E4%B8%B4%E6%97%B6%E5%AD%97%E6%AE%B5"}},[t._v("临时字段")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E9%97%AE%E9%A2%98%E5%8E%9F%E5%9B%A0-1"}},[t._v("问题原因")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95-1"}},[t._v("解决方法")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E6%94%B6%E7%9B%8A-1"}},[t._v("收益")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E9%87%8D%E6%9E%84%E6%96%B9%E6%B3%95%E8%AF%B4%E6%98%8E-1"}},[t._v("重构方法说明")])])])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E5%BC%82%E6%9B%B2%E5%90%8C%E5%B7%A5%E7%9A%84%E7%B1%BB"}},[t._v("异曲同工的类")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E9%97%AE%E9%A2%98%E5%8E%9F%E5%9B%A0-2"}},[t._v("问题原因")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95-2"}},[t._v("解决方法")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E6%94%B6%E7%9B%8A-2"}},[t._v("收益")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E4%BD%95%E6%97%B6%E5%BF%BD%E7%95%A5-1"}},[t._v("何时忽略")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E9%87%8D%E6%9E%84%E6%96%B9%E6%B3%95%E8%AF%B4%E6%98%8E-2"}},[t._v("重构方法说明")])])])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E8%A2%AB%E6%8B%92%E7%BB%9D%E7%9A%84%E9%A6%88%E8%B5%A0"}},[t._v("被拒绝的馈赠")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E9%97%AE%E9%A2%98%E5%8E%9F%E5%9B%A0-3"}},[t._v("问题原因")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95-3"}},[t._v("解决方法")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E6%94%B6%E7%9B%8A-3"}},[t._v("收益")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E9%87%8D%E6%9E%84%E6%96%B9%E6%B3%95%E8%AF%B4%E6%98%8E-3"}},[t._v("重构方法说明")])])])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E6%89%A9%E5%B1%95%E9%98%85%E8%AF%BB"}},[t._v("扩展阅读")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99"}},[t._v("参考资料")])])]),t._v(" "),a("h2",{attrs:{id:"switch-声明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#switch-声明"}},[t._v("#")]),t._v(" Switch 声明")]),t._v(" "),a("blockquote",[a("p",[t._v("Switch 声明(Switch Statements)")]),t._v(" "),a("p",[t._v("你有一个复杂的 "),a("code",[t._v("switch")]),t._v(" 语句或 "),a("code",[t._v("if")]),t._v(" 序列语句。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/switch-statements-1.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"问题原因"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题原因"}},[t._v("#")]),t._v(" 问题原因")]),t._v(" "),a("p",[t._v("面向对象程序的一个最明显特征就是：少用 "),a("code",[t._v("switch")]),t._v(" 和 "),a("code",[t._v("case")]),t._v(" 语句。从本质上说，"),a("code",[t._v("switch")]),t._v(" 语句的问题在于重复（"),a("code",[t._v("if")]),t._v(" 序列也同样如此）。你常会发现 "),a("code",[t._v("switch")]),t._v(" 语句散布于不同地点。如果要为它添加一个新的 "),a("code",[t._v("case")]),t._v(" 子句，就必须找到所有 "),a("code",[t._v("switch")]),t._v(" 语句并修改它们。面向对象中的多态概念可为此带来优雅的解决办法。")]),t._v(" "),a("p",[t._v("大多数时候，一看到 "),a("code",[t._v("switch")]),t._v(" 语句，就应该考虑以多态来替换它。")]),t._v(" "),a("h3",{attrs:{id:"解决方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方法"}},[t._v("#")]),t._v(" 解决方法")]),t._v(" "),a("ul",[a("li",[t._v("问题是多态该出现在哪？switch 语句常常根据类型码进行选择，你要的是“与该类型码相关的函数或类”，所以应该运用 "),a("code",[t._v("提炼函数(Extract Method)")]),t._v(" 将 "),a("code",[t._v("switch")]),t._v(" 语句提炼到一个独立函数中，再以 "),a("code",[t._v("搬移函数(Move Method)")]),t._v(" 将它搬移到需要多态性的那个类里。")]),t._v(" "),a("li",[t._v("如果你的 "),a("code",[t._v("switch")]),t._v(" 是基于类型码来识别分支，这时可以运用 "),a("code",[t._v("以子类取代类型码(Replace Type Code with Subclass)")]),t._v(" 或 "),a("code",[t._v("以状态/策略模式取代类型码(Replace Type Code with State/Strategy)")]),t._v(" 。")]),t._v(" "),a("li",[t._v("一旦完成这样的继承结构后，就可以运用 "),a("code",[t._v("以多态取代条件表达式(Replace Conditional with Polymorphism)")]),t._v(" 了。")]),t._v(" "),a("li",[t._v("如果条件分支并不多并且它们使用不同参数调用相同的函数，多态就没必要了。在这种情况下，你可以运用 "),a("code",[t._v("以明确函数取代参数(Replace Parameter with Explicit Methods)")]),t._v(" 。")]),t._v(" "),a("li",[t._v("如果你的选择条件之一是 null，可以运用 "),a("code",[t._v("引入 Null 对象(Introduce Null Object)")]),t._v(" 。")])]),t._v(" "),a("h3",{attrs:{id:"收益"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#收益"}},[t._v("#")]),t._v(" 收益")]),t._v(" "),a("ul",[a("li",[t._v("提升代码组织性。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/switch-statements-2.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"何时忽略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#何时忽略"}},[t._v("#")]),t._v(" 何时忽略")]),t._v(" "),a("ul",[a("li",[t._v("如果一个 "),a("code",[t._v("switch")]),t._v(" 操作只是执行简单的行为，就没有重构的必要了。")]),t._v(" "),a("li",[a("code",[t._v("switch")]),t._v(" 常被工厂设计模式族（"),a("code",[t._v("工厂方法模式(Factory Method)")]),t._v("和"),a("code",[t._v("抽象工厂模式(Abstract Factory)")]),t._v("）所使用，这种情况下也没必要重构。")])]),t._v(" "),a("h3",{attrs:{id:"重构方法说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重构方法说明"}},[t._v("#")]),t._v(" 重构方法说明")]),t._v(" "),a("h4",{attrs:{id:"提炼函数-extract-method"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提炼函数-extract-method"}},[t._v("#")]),t._v(" 提炼函数(Extract Method)")]),t._v(" "),a("p",[a("strong",[t._v("问题")])]),t._v(" "),a("p",[t._v("你有一段代码可以组织在一起。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printOwing")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printBanner")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//print details")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name: "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"amount: "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOutstanding")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("解决")])]),t._v(" "),a("p",[t._v("移动这段代码到一个新的函数中，使用函数的调用来替代老代码。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printOwing")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printBanner")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printDetails")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOutstanding")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printDetails")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" outstanding"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name: "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"amount: "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" outstanding"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"搬移函数-move-method"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#搬移函数-move-method"}},[t._v("#")]),t._v(" 搬移函数(Move Method)")]),t._v(" "),a("p",[a("strong",[t._v("问题")])]),t._v(" "),a("p",[t._v("你的程序中，有个函数与其所驻类之外的另一个类进行更多交流：调用后者，或被后者调用。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/move-method-before.png",alt:""}})]),t._v(" "),a("p",[a("strong",[t._v("解决")])]),t._v(" "),a("p",[t._v("在该函数最常引用的类中建立一个有着类似行为的新函数。将旧函数变成一个单纯的委托函数，或是旧函数完全移除。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/move-method-after.png",alt:""}})]),t._v(" "),a("h4",{attrs:{id:"以子类取代类型码-replace-type-code-with-subclass"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#以子类取代类型码-replace-type-code-with-subclass"}},[t._v("#")]),t._v(" 以子类取代类型码(Replace Type Code with Subclass)")]),t._v(" "),a("p",[a("strong",[t._v("问题")])]),t._v(" "),a("p",[t._v("你有一个不可变的类型码，它会影响类的行为。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/replace-type-code-with-subclasses-before.png",alt:""}})]),t._v(" "),a("p",[a("strong",[t._v("解决")])]),t._v(" "),a("p",[t._v("以子类取代这个类型码。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/replace-type-code-with-subclasses-after.png",alt:""}})]),t._v(" "),a("h4",{attrs:{id:"以状态-策略模式取代类型码-replace-type-code-with-state-strategy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#以状态-策略模式取代类型码-replace-type-code-with-state-strategy"}},[t._v("#")]),t._v(" 以状态/策略模式取代类型码(Replace Type Code with State/Strategy)")]),t._v(" "),a("p",[a("strong",[t._v("问题")])]),t._v(" "),a("p",[t._v("你有一个类型码，它会影响类的行为，但你无法通过继承消除它。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/replace-type-code-with-state-strategy-before.png",alt:""}})]),t._v(" "),a("p",[a("strong",[t._v("解决")])]),t._v(" "),a("p",[t._v("以状态对象取代类型码。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/replace-type-code-with-state-strategy-after.png",alt:""}})]),t._v(" "),a("h4",{attrs:{id:"以多态取代条件表达式-replace-conditional-with-polymorphism"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#以多态取代条件表达式-replace-conditional-with-polymorphism"}},[t._v("#")]),t._v(" 以多态取代条件表达式(Replace Conditional with Polymorphism)")]),t._v(" "),a("p",[a("strong",[t._v("问题")])]),t._v(" "),a("p",[t._v("你手上有个条件表达式，它根据对象类型的不同而选择不同的行为。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Bird")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSpeed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" EUROPEAN"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBaseSpeed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" AFRICAN"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBaseSpeed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getLoadFactor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" numberOfCoconuts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" NORWEGIAN_BLUE"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("isNailed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBaseSpeed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("voltage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RuntimeException")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Should be unreachable"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("解决")])]),t._v(" "),a("p",[t._v("将这个条件表达式的每个分支放进一个子类内的覆写函数中，然后将原始函数声明为抽象函数。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("abstract")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Bird")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("abstract")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSpeed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("European")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Bird")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSpeed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBaseSpeed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("African")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Bird")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSpeed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBaseSpeed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getLoadFactor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" numberOfCoconuts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NorwegianBlue")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Bird")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSpeed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("isNailed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBaseSpeed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("voltage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Somewhere in client code")]),t._v("\nspeed "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" bird"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSpeed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"以明确函数取代参数-replace-parameter-with-explicit-methods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#以明确函数取代参数-replace-parameter-with-explicit-methods"}},[t._v("#")]),t._v(" 以明确函数取代参数(Replace Parameter with Explicit Methods)")]),t._v(" "),a("p",[a("strong",[t._v("问题")])]),t._v(" "),a("p",[t._v("你有一个函数，其中完全取决于参数值而采取不同的行为。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("equals")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"height"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    height "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("equals")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"width"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    width "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Assert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("shouldNeverReachHere")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("解决")])]),t._v(" "),a("p",[t._v("针对该参数的每一个可能值，建立一个独立函数。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeight")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" arg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  height "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setWidth")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" arg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  width "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"引入-null-对象-introduce-null-object"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引入-null-对象-introduce-null-object"}},[t._v("#")]),t._v(" 引入 Null 对象(Introduce Null Object)")]),t._v(" "),a("p",[a("strong",[t._v("问题")])]),t._v(" "),a("p",[t._v("你需要再三检查某对象是否为 null。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("customer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  plan "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BillingPlan")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("basic")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  plan "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" customer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPlan")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("解决")])]),t._v(" "),a("p",[t._v("将 null 值替换为 null 对象。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NullCustomer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Customer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Plan")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPlan")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NullPlan")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Some other NULL functionality.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Replace null values with Null-object.")]),t._v("\ncustomer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("order"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("customer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" order"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("customer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NullCustomer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Use Null-object as if it's normal subclass.")]),t._v("\nplan "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" customer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPlan")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"临时字段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#临时字段"}},[t._v("#")]),t._v(" 临时字段")]),t._v(" "),a("blockquote",[a("p",[t._v("临时字段(Temporary Field)的值只在特定环境下有意义，离开这个环境，它们就什么也不是了。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/temporary-field-1.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"问题原因-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题原因-2"}},[t._v("#")]),t._v(" 问题原因")]),t._v(" "),a("p",[t._v("有时你会看到这样的对象：其内某个实例变量仅为某种特定情况而设。这样的代码让人不易理解，因为你通常认为对象在所有时候都需要它的所有变量。在变量未被使用的情况下猜测当初设置目的，会让你发疯。\n通常，临时字段是在某一算法需要大量输入时而创建。因此，为了避免函数有过多参数，程序员决定在类中创建这些数据的临时字段。这些临时字段仅仅在算法中使用，其他时候却毫无用处。\n这种代码不好理解。你期望查看对象字段的数据，但是出于某种原因，它们总是为空。")]),t._v(" "),a("h3",{attrs:{id:"解决方法-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方法-2"}},[t._v("#")]),t._v(" 解决方法")]),t._v(" "),a("ul",[a("li",[t._v("可以通过 "),a("code",[t._v("提炼类(Extract Class)")]),t._v(" 将临时字段和操作它们的所有代码提炼到一个单独的类中。此外，你可以运用 "),a("code",[t._v("以函数对象取代函数(Replace Method with Method Object)")]),t._v(" 来实现同样的目的。")]),t._v(" "),a("li",[a("code",[t._v("引入 Null 对象(Introduce Null Object)")]),t._v(" 在“变量不合法”的情况下创建一个 null 对象，从而避免写出条件表达式。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/temporary-field-2.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"收益-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#收益-2"}},[t._v("#")]),t._v(" 收益")]),t._v(" "),a("ul",[a("li",[t._v("更好的代码清晰度和组织性。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/temporary-field-3.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"重构方法说明-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重构方法说明-2"}},[t._v("#")]),t._v(" 重构方法说明")]),t._v(" "),a("h4",{attrs:{id:"提炼类-extract-class"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提炼类-extract-class"}},[t._v("#")]),t._v(" 提炼类(Extract Class)")]),t._v(" "),a("p",[a("strong",[t._v("问题")])]),t._v(" "),a("p",[t._v("某个类做了不止一件事。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/extract-class-before.png",alt:""}})]),t._v(" "),a("p",[a("strong",[t._v("解决")])]),t._v(" "),a("p",[t._v("建立一个新类，将相关的字段和函数从旧类搬移到新类。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/extract-class-after.png",alt:""}})]),t._v(" "),a("h4",{attrs:{id:"以函数对象取代函数-replace-method-with-method-object"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#以函数对象取代函数-replace-method-with-method-object"}},[t._v("#")]),t._v(" 以函数对象取代函数(Replace Method with Method Object)")]),t._v(" "),a("p",[a("strong",[t._v("问题")])]),t._v(" "),a("p",[t._v("你有一个过长函数，它的局部变量交织在一起，以致于你无法应用提炼函数(Extract Method) 。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Order")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("price")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" primaryBasePrice"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" secondaryBasePrice"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" tertiaryBasePrice"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// long computation.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("解决")])]),t._v(" "),a("p",[t._v("将函数移到一个独立的类中，使得局部变量成了这个类的字段。然后，你可以将函数分割成这个类中的多个函数。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Order")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("price")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PriceCalculator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("compute")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PriceCalculator")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" primaryBasePrice"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" secondaryBasePrice"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" tertiaryBasePrice"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PriceCalculator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Order")]),t._v(" order"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// copy relevant information from order object.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("compute")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// long computation.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"引入-null-对象-introduce-null-object-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引入-null-对象-introduce-null-object-2"}},[t._v("#")]),t._v(" 引入 Null 对象(Introduce Null Object)")]),t._v(" "),a("p",[a("strong",[t._v("问题")])]),t._v(" "),a("p",[t._v("你需要再三检查某对象是否为 null。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("customer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  plan "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BillingPlan")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("basic")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  plan "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" customer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPlan")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("解决")])]),t._v(" "),a("p",[t._v("将 null 值替换为 null 对象。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NullCustomer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Customer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Plan")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPlan")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NullPlan")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Some other NULL functionality.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Replace null values with Null-object.")]),t._v("\ncustomer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("order"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("customer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" order"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("customer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NullCustomer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Use Null-object as if it's normal subclass.")]),t._v("\nplan "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" customer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPlan")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"异曲同工的类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异曲同工的类"}},[t._v("#")]),t._v(" 异曲同工的类")]),t._v(" "),a("blockquote",[a("p",[t._v("异曲同工的类(Alternative Classes with Different Interfaces)")]),t._v(" "),a("p",[t._v("两个类中有着不同的函数，却在做着同一件事。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/alternative-classes-with-different-interfaces-1.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"问题原因-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题原因-3"}},[t._v("#")]),t._v(" 问题原因")]),t._v(" "),a("p",[t._v("这种情况往往是因为：创建这个类的程序员并不知道已经有实现这个功能的类存在了。")]),t._v(" "),a("h3",{attrs:{id:"解决方法-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方法-3"}},[t._v("#")]),t._v(" 解决方法")]),t._v(" "),a("ul",[a("li",[t._v("如果两个函数做同一件事，却有着不同的签名，请运用 "),a("code",[t._v("函数改名(Rename Method)")]),t._v(" 根据它们的用途重新命名。")]),t._v(" "),a("li",[t._v("运用 "),a("code",[t._v("搬移函数(Move Method)")]),t._v(" 、 "),a("code",[t._v("添加参数(Add Parameter)")]),t._v(" 和 "),a("code",[t._v("令函数携带参数(Parameterize Method)")]),t._v(" 来使得方法的名称和实现一致。")]),t._v(" "),a("li",[t._v("如果两个类仅有部分功能是重复的，尝试运用 "),a("code",[t._v("提炼超类(Extract Superclass)")]),t._v(" 。这种情况下，已存在的类就成了超类。")]),t._v(" "),a("li",[t._v("当最终选择并运用某种方法来重构后，也许你就能删除其中一个类了。")])]),t._v(" "),a("h3",{attrs:{id:"收益-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#收益-3"}},[t._v("#")]),t._v(" 收益")]),t._v(" "),a("ul",[a("li",[t._v("消除了不必要的重复代码，为代码瘦身了。")]),t._v(" "),a("li",[t._v("代码更易读（不再需要猜测为什么要有两个功能相同的类）。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/alternative-classes-with-different-interfaces-2.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"何时忽略-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#何时忽略-2"}},[t._v("#")]),t._v(" 何时忽略")]),t._v(" "),a("ul",[a("li",[t._v("有时合并类是不可能的，或者是如此困难以至于没有意义。例如：两个功能相似的类存在于不同的 lib 库中。")])]),t._v(" "),a("h3",{attrs:{id:"重构方法说明-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重构方法说明-3"}},[t._v("#")]),t._v(" 重构方法说明")]),t._v(" "),a("h4",{attrs:{id:"函数改名-rename-method"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数改名-rename-method"}},[t._v("#")]),t._v(" 函数改名(Rename Method)")]),t._v(" "),a("p",[a("strong",[t._v("问题")])]),t._v(" "),a("p",[t._v("函数的名称未能恰当的揭示函数的用途。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getsnm")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("解决")])]),t._v(" "),a("p",[t._v("修改函数名。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSecondName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"搬移函数-move-method-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#搬移函数-move-method-2"}},[t._v("#")]),t._v(" 搬移函数(Move Method)")]),t._v(" "),a("p",[a("strong",[t._v("问题")])]),t._v(" "),a("p",[t._v("你的程序中，有个函数与其所驻类之外的另一个类进行更多交流：调用后者，或被后者调用。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/move-method-before.png",alt:""}})]),t._v(" "),a("p",[a("strong",[t._v("解决")])]),t._v(" "),a("p",[t._v("在该函数最常引用的类中建立一个有着类似行为的新函数。将旧函数变成一个单纯的委托函数，或是旧函数完全移除。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/move-method-after.png",alt:""}})]),t._v(" "),a("h4",{attrs:{id:"添加参数-add-parameter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加参数-add-parameter"}},[t._v("#")]),t._v(" 添加参数(Add Parameter)")]),t._v(" "),a("p",[a("strong",[t._v("问题")]),t._v("\n某个函数需要从调用端得到更多信息。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Customer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Contact")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getContact")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("解决")]),t._v("\n为此函数添加一个对象函数，让改对象带进函数所需信息。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("class Customer {\n  public Contact getContact(Date date);\n}\n")])])]),a("h4",{attrs:{id:"令函数携带参数-parameterize-method"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#令函数携带参数-parameterize-method"}},[t._v("#")]),t._v(" 令函数携带参数(Parameterize Method)")]),t._v(" "),a("p",[a("strong",[t._v("问题")])]),t._v(" "),a("p",[t._v("若干函数做了类似的工作，但在函数本体中却包含了不同的值。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/parameterize-method-before.png",alt:""}}),t._v(" "),a("strong",[t._v("解决")])]),t._v(" "),a("p",[t._v("建立单一函数，以参数表达哪些不同的值。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/parameterize-method-after.png",alt:""}})]),t._v(" "),a("h4",{attrs:{id:"提炼超类-extract-superclass"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提炼超类-extract-superclass"}},[t._v("#")]),t._v(" 提炼超类(Extract Superclass)")]),t._v(" "),a("p",[a("strong",[t._v("问题")])]),t._v(" "),a("p",[t._v("两个类有相似特性。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/extract-superclass-before.png",alt:""}})]),t._v(" "),a("p",[a("strong",[t._v("解决")])]),t._v(" "),a("p",[t._v("为这两个类建立一个超类，将相同特性移至超类。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/extract-superclass-after.png",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"被拒绝的馈赠"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#被拒绝的馈赠"}},[t._v("#")]),t._v(" 被拒绝的馈赠")]),t._v(" "),a("blockquote",[a("p",[t._v("被拒绝的馈赠(Refused Bequest)")]),t._v(" "),a("p",[t._v("子类仅仅使用父类中的部分方法和属性。其他来自父类的馈赠成为了累赘。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/refused-bequest-1.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"问题原因-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题原因-4"}},[t._v("#")]),t._v(" 问题原因")]),t._v(" "),a("p",[t._v("有些人仅仅是想重用超类中的部分代码而创建了子类。但实际上超类和子类完全不同。")]),t._v(" "),a("h3",{attrs:{id:"解决方法-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方法-4"}},[t._v("#")]),t._v(" 解决方法")]),t._v(" "),a("ul",[a("li",[t._v("如果继承没有意义并且子类和父类之间确实没有共同点，可以运用 "),a("code",[t._v("以委托取代继承(Replace Inheritance with Delegation)")]),t._v(" 消除继承。")]),t._v(" "),a("li",[t._v("如果继承是适当的，则去除子类中不需要的字段和方法。运用 "),a("code",[t._v("提炼超类(Extract Superclass)")]),t._v(" 将所有超类中对于子类有用的字段和函数提取出来，置入一个新的超类中，然后让两个类都继承自它。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/refused-bequest-2.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"收益-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#收益-4"}},[t._v("#")]),t._v(" 收益")]),t._v(" "),a("ul",[a("li",[t._v("提高代码的清晰度和组织性。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/refused-bequest-3.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"重构方法说明-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重构方法说明-4"}},[t._v("#")]),t._v(" 重构方法说明")]),t._v(" "),a("h4",{attrs:{id:"以委托取代继承-replace-inheritance-with-delegation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#以委托取代继承-replace-inheritance-with-delegation"}},[t._v("#")]),t._v(" 以委托取代继承(Replace Inheritance with Delegation)")]),t._v(" "),a("p",[a("strong",[t._v("问题")])]),t._v(" "),a("p",[t._v("某个子类只使用超类接口中的一部分，或是根本不需要继承而来的数据。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/replace-inheritance-with-delegation-before.png",alt:""}})]),t._v(" "),a("p",[a("strong",[t._v("解决")])]),t._v(" "),a("ol",[a("li",[t._v("在子类中新建一个字段用以保存超类；")]),t._v(" "),a("li",[t._v("调整子类函数，令它改而委托超类；")]),t._v(" "),a("li",[t._v("然后去掉两者之间的继承关系。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/replace-inheritance-with-delegation-after.png",alt:""}})]),t._v(" "),a("h4",{attrs:{id:"提炼超类-extract-superclass-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提炼超类-extract-superclass-2"}},[t._v("#")]),t._v(" 提炼超类(Extract Superclass)")]),t._v(" "),a("p",[a("strong",[t._v("问题")])]),t._v(" "),a("p",[t._v("两个类有相似特性。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/extract-superclass-before.png",alt:""}})]),t._v(" "),a("p",[a("strong",[t._v("解决")])]),t._v(" "),a("p",[t._v("为这两个类建立一个超类，将相同特性移至超类。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/extract-superclass-after.png",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"扩展阅读"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#扩展阅读"}},[t._v("#")]),t._v(" 扩展阅读")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/dunwu/design/blob/master/docs/refactor/%E4%BB%A3%E7%A0%81%E7%9A%84%E5%9D%8F%E5%91%B3%E9%81%93%E5%92%8C%E9%87%8D%E6%9E%84.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("代码的坏味道和重构"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/dunwu/design/blob/master/docs/refactor/%E4%BB%A3%E7%A0%81%E5%9D%8F%E5%91%B3%E9%81%93%E4%B9%8B%E4%BB%A3%E7%A0%81%E8%87%83%E8%82%BF.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("代码坏味道之代码臃肿"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/dunwu/design/blob/master/docs/refactor/%E4%BB%A3%E7%A0%81%E5%9D%8F%E5%91%B3%E9%81%93%E4%B9%8B%E6%BB%A5%E7%94%A8%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("代码坏味道之滥用面向对象"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/dunwu/design/blob/master/docs/refactor/%E4%BB%A3%E7%A0%81%E5%9D%8F%E5%91%B3%E9%81%93%E4%B9%8B%E5%8F%98%E9%9D%A9%E7%9A%84%E9%9A%9C%E7%A2%8D.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("代码坏味道之变革的障碍"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/dunwu/design/blob/master/docs/refactor/%E4%BB%A3%E7%A0%81%E5%9D%8F%E5%91%B3%E9%81%93%E4%B9%8B%E9%9D%9E%E5%BF%85%E8%A6%81%E7%9A%84.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("代码坏味道之非必要的"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/dunwu/design/blob/master/docs/refactor/%E4%BB%A3%E7%A0%81%E5%9D%8F%E5%91%B3%E9%81%93%E4%B9%8B%E8%80%A6%E5%90%88.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("代码坏味道之耦合"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://book.douban.com/subject/4199741/",target:"_blank",rel:"noopener noreferrer"}},[t._v("《代码整洁之道》"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://book.douban.com/subject/4262627/",target:"_blank",rel:"noopener noreferrer"}},[t._v("《重构 - 改善既有代码的设计》"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://book.douban.com/subject/1477390/",target:"_blank",rel:"noopener noreferrer"}},[t._v("《代码大全》"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("https://sourcemaking.com/refactoring")])])])}),[],!1,null,null,null);s.default=e.exports}}]);