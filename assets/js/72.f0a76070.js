(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{467:function(t,a,s){"use strict";s.r(a);var e=s(15),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("blockquote",[s("p",[t._v("翻译自：https://sourcemaking.com/refactoring/smells/bloaters")]),t._v(" "),s("p",[s("strong",[t._v("代码臃肿(Bloated)这组坏味道意味着：代码中的类、函数、字段没有经过合理的组织，只是简单的堆砌起来。这一类型的问题通常在代码的初期并不明显，但是随着代码规模的增长而逐渐积累（特别是当没有人努力去根除它们时）。")])])]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#%E5%9F%BA%E6%9C%AC%E7%B1%BB%E5%9E%8B%E5%81%8F%E6%89%A7"}},[t._v("基本类型偏执")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#%E9%97%AE%E9%A2%98%E5%8E%9F%E5%9B%A0"}},[t._v("问题原因")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95"}},[t._v("解决方法")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E6%94%B6%E7%9B%8A"}},[t._v("收益")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E9%87%8D%E6%9E%84%E6%96%B9%E6%B3%95%E8%AF%B4%E6%98%8E"}},[t._v("重构方法说明")])])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E6%95%B0%E6%8D%AE%E6%B3%A5%E5%9B%A2"}},[t._v("数据泥团")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#%E9%97%AE%E9%A2%98%E5%8E%9F%E5%9B%A0-1"}},[t._v("问题原因")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95-1"}},[t._v("解决方法")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E6%94%B6%E7%9B%8A-1"}},[t._v("收益")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E4%BD%95%E6%97%B6%E5%BF%BD%E7%95%A5"}},[t._v("何时忽略")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E9%87%8D%E6%9E%84%E6%96%B9%E6%B3%95%E8%AF%B4%E6%98%8E-1"}},[t._v("重构方法说明")])])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E8%BF%87%E5%A4%A7%E7%9A%84%E7%B1%BB"}},[t._v("过大的类")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#%E9%97%AE%E9%A2%98%E5%8E%9F%E5%9B%A0-2"}},[t._v("问题原因")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95-2"}},[t._v("解决方法")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E6%94%B6%E7%9B%8A-2"}},[t._v("收益")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E9%87%8D%E6%9E%84%E6%96%B9%E6%B3%95%E8%AF%B4%E6%98%8E-2"}},[t._v("重构方法说明")])])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E8%BF%87%E9%95%BF%E5%87%BD%E6%95%B0"}},[t._v("过长函数")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#%E9%97%AE%E9%A2%98%E7%9A%84%E5%8E%9F%E5%9B%A0"}},[t._v("问题的原因")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E8%A7%A3%E5%86%B3%E5%87%BD%E6%95%B0"}},[t._v("解决函数")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E6%94%B6%E7%9B%8A-3"}},[t._v("收益")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E6%80%A7%E8%83%BD"}},[t._v("性能")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E9%87%8D%E6%9E%84%E6%96%B9%E6%B3%95%E8%AF%B4%E6%98%8E-3"}},[t._v("重构方法说明")])])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E8%BF%87%E9%95%BF%E5%8F%82%E6%95%B0%E5%88%97"}},[t._v("过长参数列")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#%E9%97%AE%E9%A2%98%E5%8E%9F%E5%9B%A0-3"}},[t._v("问题原因")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88"}},[t._v("解决方案")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E6%94%B6%E7%9B%8A-4"}},[t._v("收益")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E4%BD%95%E6%97%B6%E5%BF%BD%E7%95%A5-1"}},[t._v("何时忽略")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E9%87%8D%E6%9E%84%E6%96%B9%E6%B3%95%E8%AF%B4%E6%98%8E-4"}},[t._v("重构方法说明")])])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E6%89%A9%E5%B1%95%E9%98%85%E8%AF%BB"}},[t._v("扩展阅读")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99"}},[t._v("参考资料")])])]),t._v(" "),s("h2",{attrs:{id:"基本类型偏执"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本类型偏执"}},[t._v("#")]),t._v(" 基本类型偏执")]),t._v(" "),s("blockquote",[s("p",[t._v("基本类型偏执(Primitive Obsession)")]),t._v(" "),s("ul",[s("li",[t._v("使用基本类型而不是小对象来实现简单任务（例如货币、范围、电话号码字符串等）。")]),t._v(" "),s("li",[t._v("使用常量编码信息（例如一个用于引用管理员权限的常量"),s("code",[t._v("USER_ADMIN_ROLE = 1")]),t._v(" ）。")]),t._v(" "),s("li",[t._v("使用字符串常量作为字段名在数组中使用。")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/primitive-obsession-1.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"问题原因"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#问题原因"}},[t._v("#")]),t._v(" 问题原因")]),t._v(" "),s("p",[t._v("类似其他大部分坏味道，基本类型偏执诞生于类初建的时候。一开始，可能只是不多的字段，随着表示的特性越来越多，基本数据类型字段也越来越多。")]),t._v(" "),s("p",[t._v("基本类型常常被用于表示模型的类型。你有一组数字或字符串用来表示某个实体。")]),t._v(" "),s("p",[t._v("还有一个场景：在模拟场景，大量的字符串常量被用于数组的索引。")]),t._v(" "),s("h3",{attrs:{id:"解决方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解决方法"}},[t._v("#")]),t._v(" 解决方法")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/primitive-obsession-2.png",alt:""}})]),t._v(" "),s("p",[t._v("大多数编程语言都支持基本数据类型和结构类型（类、结构体等）。结构类型允许程序员将基本数据类型组织起来，以代表某一事物的模型。")]),t._v(" "),s("p",[t._v("基本数据类型可以看成是机构类型的积木块。当基本数据类型数量成规模后，将它们有组织地结合起来，可以更方便的管理这些数据。")]),t._v(" "),s("ul",[s("li",[t._v("如果你有大量的基本数据类型字段，就有可能将其中部分存在逻辑联系的字段组织起来，形成一个类。更进一步的是，将与这些数据有关联的方法也一并移入类中。为了实现这个目标，可以尝试 "),s("code",[t._v("以类取代类型码(Replace Type Code with Class)")]),t._v(" 。")]),t._v(" "),s("li",[t._v("如果基本数据类型字段的值是用于方法的参数，可以使用 "),s("code",[t._v("引入参数对象(Introduce Parameter Object)")]),t._v(" 或 "),s("code",[t._v("保持对象完整(Preserve Whole Object)")]),t._v(" 。")]),t._v(" "),s("li",[t._v("如果想要替换的数据值是类型码，而它并不影响行为，则可以运用 "),s("code",[t._v("以类取代类型码(Replace Type Code with Class)")]),t._v(" 将它替换掉。如果你有与类型码相关的条件表达式，可运用 "),s("code",[t._v("以子类取代类型码(Replace Type Code with Subclass)")]),t._v(" 或 "),s("code",[t._v("以状态/策略模式取代类型码(Replace Type Code with State/Strategy)")]),t._v(" 加以处理。")]),t._v(" "),s("li",[t._v("如果你发现自己正从数组中挑选数据，可运用 "),s("code",[t._v("以对象取代数组(Replace Array with Object)")]),t._v(" 。")])]),t._v(" "),s("h3",{attrs:{id:"收益"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#收益"}},[t._v("#")]),t._v(" 收益")]),t._v(" "),s("ul",[s("li",[t._v("多亏了使用对象替代基本数据类型，使得代码变得更加灵活。")]),t._v(" "),s("li",[t._v("代码变得更加易读和更加有组织。特殊数据可以集中进行操作，而不像之前那样分散。不用再猜测这些陌生的常量的意义以及它们为什么在数组中。")]),t._v(" "),s("li",[t._v("更容易发现重复代码。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/primitive-obsession-3.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"重构方法说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重构方法说明"}},[t._v("#")]),t._v(" 重构方法说明")]),t._v(" "),s("h4",{attrs:{id:"以类取代类型码-replace-type-code-with-class"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#以类取代类型码-replace-type-code-with-class"}},[t._v("#")]),t._v(" 以类取代类型码(Replace Type Code with Class)")]),t._v(" "),s("p",[s("strong",[t._v("问题")])]),t._v(" "),s("p",[t._v("类之中有一个数值类型码，但它并不影响类的行为。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/replace-type-code-with-class-before.png",alt:""}})]),t._v(" "),s("p",[s("strong",[t._v("解决")])]),t._v(" "),s("p",[t._v("以一个新的类替换该数值类型码。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/replace-type-code-with-class-after.png",alt:""}})]),t._v(" "),s("h4",{attrs:{id:"引入参数对象-introduce-parameter-object"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#引入参数对象-introduce-parameter-object"}},[t._v("#")]),t._v(" 引入参数对象(Introduce Parameter Object)")]),t._v(" "),s("p",[s("strong",[t._v("问题")])]),t._v(" "),s("p",[t._v("某些参数总是很自然地同时出现。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/introduce-parameter-object-before.png",alt:""}})]),t._v(" "),s("p",[s("strong",[t._v("解决")])]),t._v(" "),s("p",[t._v("以一个对象来取代这些参数。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/introduce-parameter-object-after.png",alt:""}})]),t._v(" "),s("h4",{attrs:{id:"保持对象完整-preserve-whole-object"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#保持对象完整-preserve-whole-object"}},[t._v("#")]),t._v(" 保持对象完整(Preserve Whole Object)")]),t._v(" "),s("p",[s("strong",[t._v("问题")])]),t._v(" "),s("p",[t._v("你从某个对象中取出若干值，将它们作为某一次函数调用时的参数。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" low "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" daysTempRange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getLow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" high "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" daysTempRange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getHigh")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" withinPlan "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" plan"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("withinRange")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("low"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" high"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("strong",[t._v("解决")])]),t._v(" "),s("p",[t._v("改为传递整个对象。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" withinPlan "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" plan"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("withinRange")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("daysTempRange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"以子类取代类型码-replace-type-code-with-subclass"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#以子类取代类型码-replace-type-code-with-subclass"}},[t._v("#")]),t._v(" 以子类取代类型码(Replace Type Code with Subclass)")]),t._v(" "),s("p",[s("strong",[t._v("问题")])]),t._v(" "),s("p",[t._v("你有一个不可变的类型码，它会影响类的行为。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/replace-type-code-with-subclasses-before.png",alt:""}})]),t._v(" "),s("p",[s("strong",[t._v("解决")])]),t._v(" "),s("p",[t._v("以子类取代这个类型码。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/replace-type-code-with-subclasses-after.png",alt:""}})]),t._v(" "),s("h4",{attrs:{id:"以状态-策略模式取代类型码-replace-type-code-with-state-strategy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#以状态-策略模式取代类型码-replace-type-code-with-state-strategy"}},[t._v("#")]),t._v(" 以状态/策略模式取代类型码(Replace Type Code with State/Strategy)")]),t._v(" "),s("p",[s("strong",[t._v("问题")])]),t._v(" "),s("p",[t._v("你有一个类型码，它会影响类的行为，但你无法通过继承消除它。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/replace-type-code-with-state-strategy-before.png",alt:""}})]),t._v(" "),s("p",[s("strong",[t._v("解决")])]),t._v(" "),s("p",[t._v("以状态对象取代类型码。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/replace-type-code-with-state-strategy-after.png",alt:""}})]),t._v(" "),s("h4",{attrs:{id:"以对象取代数组-replace-array-with-object"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#以对象取代数组-replace-array-with-object"}},[t._v("#")]),t._v(" 以对象取代数组(Replace Array with Object)")]),t._v(" "),s("p",[s("strong",[t._v("问题")])]),t._v(" "),s("p",[t._v("你有一个数组，其中的元素各自代表不同的东西。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" row "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nrow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Liverpool"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nrow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"15"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("strong",[t._v("解决")])]),t._v(" "),s("p",[t._v("以对象替换数组。对于数组中的每个元素，以一个字段来表示。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Performance")]),t._v(" row "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Performance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nrow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Liverpool"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nrow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setWins")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"15"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"数据泥团"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据泥团"}},[t._v("#")]),t._v(" 数据泥团")]),t._v(" "),s("blockquote",[s("p",[t._v("数据泥团(Data Clumps)")]),t._v(" "),s("p",[t._v("有时，代码的不同部分包含相同的变量组（例如用于连接到数据库的参数）。这些绑在一起出现的数据应该拥有自己的对象。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/data-clumps-1.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"问题原因-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#问题原因-2"}},[t._v("#")]),t._v(" 问题原因")]),t._v(" "),s("p",[t._v("通常，数据泥团的出现时因为糟糕的编程结构或“复制-粘贴式编程”。")]),t._v(" "),s("p",[t._v("有一个判断是否是数据泥团的好办法：删掉众多数据中的一项。这么做，其他数据有没有因而失去意义？如果它们不再有意义，这就是个明确的信号：你应该为它们产生一个新的对象。")]),t._v(" "),s("h3",{attrs:{id:"解决方法-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解决方法-2"}},[t._v("#")]),t._v(" 解决方法")]),t._v(" "),s("ul",[s("li",[t._v("首先找出这些数据以字段形式出现的地方，运用 "),s("code",[t._v("提炼类(Extract Class)")]),t._v(" 将它们提炼到一个独立对象中。")]),t._v(" "),s("li",[t._v("如果数据泥团在函数的参数列中出现，运用 "),s("code",[t._v("引入参数对象(Introduce Parameter Object)")]),t._v(" 将它们组织成一个类。")]),t._v(" "),s("li",[t._v("如果数据泥团的部分数据出现在其他函数中，考虑运用 "),s("code",[t._v("保持对象完整(Preserve Whole Object)")]),t._v(" 将整个数据对象传入到函数中。")]),t._v(" "),s("li",[t._v("检视一下使用这些字段的代码，也许，将它们移入一个数据类是个不错的主意。")])]),t._v(" "),s("h3",{attrs:{id:"收益-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#收益-2"}},[t._v("#")]),t._v(" 收益")]),t._v(" "),s("ul",[s("li",[t._v("提高代码易读性和组织性。对于特殊数据的操作，可以集中进行处理，而不像以前那样分散。")]),t._v(" "),s("li",[t._v("减少代码量。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/data-clumps-3.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"何时忽略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#何时忽略"}},[t._v("#")]),t._v(" 何时忽略")]),t._v(" "),s("ul",[s("li",[t._v("有时为了对象中的部分数据而将整个对象作为参数传递给函数，可能会产生让两个类之间不收欢迎的依赖关系，这中情况下可以不传递整个对象。")])]),t._v(" "),s("h3",{attrs:{id:"重构方法说明-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重构方法说明-2"}},[t._v("#")]),t._v(" 重构方法说明")]),t._v(" "),s("h4",{attrs:{id:"提炼类-extract-class"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提炼类-extract-class"}},[t._v("#")]),t._v(" 提炼类(Extract Class)")]),t._v(" "),s("p",[s("strong",[t._v("问题")])]),t._v(" "),s("p",[t._v("某个类做了不止一件事。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/extract-class-before.png",alt:""}})]),t._v(" "),s("p",[s("strong",[t._v("解决")])]),t._v(" "),s("p",[t._v("建立一个新类，将相关的字段和函数从旧类搬移到新类。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/extract-class-after.png",alt:""}})]),t._v(" "),s("h4",{attrs:{id:"引入参数对象-introduce-parameter-object-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#引入参数对象-introduce-parameter-object-2"}},[t._v("#")]),t._v(" 引入参数对象(Introduce Parameter Object)")]),t._v(" "),s("p",[s("strong",[t._v("问题")])]),t._v(" "),s("p",[t._v("某些参数总是很自然地同时出现。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/introduce-parameter-object-before.png",alt:""}})]),t._v(" "),s("p",[s("strong",[t._v("解决")])]),t._v(" "),s("p",[t._v("以一个对象来取代这些参数。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/introduce-parameter-object-after.png",alt:""}})]),t._v(" "),s("h4",{attrs:{id:"保持对象完整-preserve-whole-object-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#保持对象完整-preserve-whole-object-2"}},[t._v("#")]),t._v(" 保持对象完整(Preserve Whole Object)")]),t._v(" "),s("p",[s("strong",[t._v("问题")])]),t._v(" "),s("p",[t._v("你从某个对象中取出若干值，将它们作为某一次函数调用时的参数。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" low "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" daysTempRange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getLow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" high "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" daysTempRange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getHigh")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" withinPlan "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" plan"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("withinRange")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("low"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" high"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("strong",[t._v("解决")])]),t._v(" "),s("p",[t._v("改为传递整个对象。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" withinPlan "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" plan"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("withinRange")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("daysTempRange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"过大的类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#过大的类"}},[t._v("#")]),t._v(" 过大的类")]),t._v(" "),s("blockquote",[s("p",[t._v("过大的类(Large Class)")]),t._v(" "),s("p",[t._v("一个类含有过多字段、函数、代码行。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/large-class-1.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"问题原因-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#问题原因-3"}},[t._v("#")]),t._v(" 问题原因")]),t._v(" "),s("p",[t._v("类通常一开始很小，但是随着程序的增长而逐渐膨胀。")]),t._v(" "),s("p",[t._v("类似于过长函数，程序员通常觉得在一个现存类中添加新特性比创建一个新的类要容易。")]),t._v(" "),s("h3",{attrs:{id:"解决方法-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解决方法-3"}},[t._v("#")]),t._v(" 解决方法")]),t._v(" "),s("p",[t._v("设计模式中有一条重要原则：职责单一原则。一个类应该只赋予它一个职责。如果它所承担的职责太多，就该考虑为它减减负。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/large-class-2.png",alt:""}})]),t._v(" "),s("ul",[s("li",[t._v("如果过大类中的部分行为可以提炼到一个独立的组件中，可以使用 "),s("code",[t._v("提炼类(Extract Class)")]),t._v("。")]),t._v(" "),s("li",[t._v("如果过大类中的部分行为可以用不同方式实现或使用于特殊场景，可以使用 "),s("code",[t._v("提炼子类(Extract Subclass)")]),t._v("。")]),t._v(" "),s("li",[t._v("如果有必要为客户端提供一组操作和行为，可以使用 "),s("code",[t._v("提炼接口(Extract Interface)")]),t._v("。")]),t._v(" "),s("li",[t._v("如果你的过大类是个 GUI 类，可能需要把数据和行为移到一个独立的领域对象去。你可能需要两边各保留一些重复数据，并保持两边同步。 "),s("code",[t._v("复制被监视数据(Duplicate Observed Data)")]),t._v(" 可以告诉你怎么做。")])]),t._v(" "),s("h3",{attrs:{id:"收益-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#收益-3"}},[t._v("#")]),t._v(" 收益")]),t._v(" "),s("ul",[s("li",[t._v("重构过大的类可以使程序员不必记住一个类中大量的属性。")]),t._v(" "),s("li",[t._v("在大多数情况下，分割过大的类可以避免代码和功能的重复。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/large-class-3.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"重构方法说明-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重构方法说明-3"}},[t._v("#")]),t._v(" 重构方法说明")]),t._v(" "),s("h4",{attrs:{id:"提炼类-extract-class-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提炼类-extract-class-2"}},[t._v("#")]),t._v(" 提炼类(Extract Class)")]),t._v(" "),s("p",[s("strong",[t._v("问题")])]),t._v(" "),s("p",[t._v("某个类做了不止一件事。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/extract-class-before.png",alt:""}})]),t._v(" "),s("p",[s("strong",[t._v("解决")])]),t._v(" "),s("p",[t._v("建立一个新类，将相关的字段和函数从旧类搬移到新类。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/extract-class-after.png",alt:""}})]),t._v(" "),s("h4",{attrs:{id:"提炼子类-extract-subclass"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提炼子类-extract-subclass"}},[t._v("#")]),t._v(" 提炼子类(Extract Subclass)")]),t._v(" "),s("p",[s("strong",[t._v("问题")])]),t._v(" "),s("p",[t._v("一个类中有些特性仅用于特定场景。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/extract-subclass-before.png",alt:""}})]),t._v(" "),s("p",[s("strong",[t._v("解决")])]),t._v(" "),s("p",[t._v("创建一个子类，并将用于特殊场景的特性置入其中。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/extract-subclass-after.png",alt:""}})]),t._v(" "),s("h4",{attrs:{id:"提炼接口-extract-interface"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提炼接口-extract-interface"}},[t._v("#")]),t._v(" 提炼接口(Extract Interface)")]),t._v(" "),s("p",[s("strong",[t._v("问题")])]),t._v(" "),s("p",[t._v("多个客户端使用一个类部分相同的函数。另一个场景是两个类中的部分函数相同。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/extract-interface-before.png",alt:""}})]),t._v(" "),s("p",[s("strong",[t._v("解决")])]),t._v(" "),s("p",[t._v("移动相同的部分函数到接口中。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/extract-interface-after.png",alt:""}})]),t._v(" "),s("h4",{attrs:{id:"复制被监视数据-duplicate-observed-data"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#复制被监视数据-duplicate-observed-data"}},[t._v("#")]),t._v(" 复制被监视数据(Duplicate Observed Data)")]),t._v(" "),s("p",[s("strong",[t._v("问题")])]),t._v(" "),s("p",[t._v("如果存储在类中的数据是负责 GUI 的。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/duplicate-observed-data-before.png",alt:""}})]),t._v(" "),s("p",[s("strong",[t._v("解决")])]),t._v(" "),s("p",[t._v("一个比较好的方法是将负责 GUI 的数据放入一个独立的类，以确保 GUI 数据与域类之间的连接和同步。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/duplicate-observed-data-after.png",alt:""}})]),t._v(" "),s("h2",{attrs:{id:"过长函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#过长函数"}},[t._v("#")]),t._v(" 过长函数")]),t._v(" "),s("blockquote",[s("p",[t._v("过长函数(Long Method)")]),t._v(" "),s("p",[t._v("一个函数含有太多行代码。一般来说，任何函数超过 10 行时，你就可以考虑是不是过长了。\n函数中的代码行数原则上不要超过 100 行。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/long-method-1.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"问题的原因"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#问题的原因"}},[t._v("#")]),t._v(" 问题的原因")]),t._v(" "),s("p",[t._v("通常情况下，创建一个新函数的难度要大于添加功能到一个已存在的函数。大部分人都觉得：“我就添加这么两行代码，为此新建一个函数实在是小题大做了。”于是，张三加两行，李四加两行，王五加两行。。。函数日益庞大，最终烂的像一锅浆糊，再也没人能完全看懂了。于是大家就更不敢轻易动这个函数了，只能恶性循环的往其中添加代码。所以，如果你看到一个超过 200 行的函数，通常都是多个程序员东拼西凑出来的。")]),t._v(" "),s("h3",{attrs:{id:"解决函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解决函数"}},[t._v("#")]),t._v(" 解决函数")]),t._v(" "),s("p",[t._v("一个很好的技巧是："),s("strong",[t._v("寻找注释")]),t._v("。添加注释，一般有这么几个原因：代码逻辑较为晦涩或复杂；这段代码功能相对独立；特殊处理。\n如果代码前方有一行注释，就是在提醒你：可以将这段代码替换成一个函数，而且可以在注释的基础上给这个函数命名。如果函数有一个描述恰当的名字，就不需要去看内部代码究竟是如何实现的。就算只有一行代码，如果它需要以注释来说明，那也值得将它提炼到独立函数中。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/long-method-2.png",alt:""}})]),t._v(" "),s("ul",[s("li",[t._v("为了给一个函数瘦身，可以使用 "),s("code",[t._v("提炼函数(Extract Method)")]),t._v("。")]),t._v(" "),s("li",[t._v("如果局部变量和参数干扰提炼函数，可以使用 "),s("code",[t._v("以查询取代临时变量(Replace Temp with Query)")]),t._v("，"),s("code",[t._v("引入参数对象(Introduce Parameter Object)")]),t._v(" 或 "),s("code",[t._v("保持对象完整(Preserve Whole Object)")]),t._v(" 。")]),t._v(" "),s("li",[t._v("如果前面两条没有帮助，可以通过 "),s("code",[t._v("以函数对象取代函数(Replace Method with Method Object)")]),t._v(" 尝试移动整个函数到一个独立的对象中。")]),t._v(" "),s("li",[t._v("条件表达式和循环常常也是提炼的信号。对于条件表达式，可以使用 "),s("code",[t._v("分解条件表达式(Decompose Conditional)")]),t._v(" 。至于循环，应该使用 "),s("code",[t._v("提炼函数(Extract Method)")]),t._v(" 将循环和其内的代码提炼到独立函数中。")])]),t._v(" "),s("h3",{attrs:{id:"收益-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#收益-4"}},[t._v("#")]),t._v(" 收益")]),t._v(" "),s("ul",[s("li",[t._v("在所有类型的面向对象代码中，函数比较短小精悍的类往往生命周期较长。一个函数越长，就越不容易理解和维护。")]),t._v(" "),s("li",[t._v("此外，过长函数中往往含有难以发现的重复代码。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/long-method-3.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"性能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#性能"}},[t._v("#")]),t._v(" 性能")]),t._v(" "),s("p",[t._v("是否像许多人说的那样，增加函数的数量会影响性能？在几乎绝大多数情况下，这种影响是可以忽略不计，所以不用担心。\n此外，现在有了清晰和易读的代码，在需要的时候，你将更容易找到真正有效的函数来重组代码和提高性能。")]),t._v(" "),s("h3",{attrs:{id:"重构方法说明-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重构方法说明-4"}},[t._v("#")]),t._v(" 重构方法说明")]),t._v(" "),s("h4",{attrs:{id:"提炼函数-extract-method"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提炼函数-extract-method"}},[t._v("#")]),t._v(" 提炼函数(Extract Method)")]),t._v(" "),s("p",[s("strong",[t._v("问题")])]),t._v(" "),s("p",[t._v("你有一段代码可以组织在一起。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printOwing")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printBanner")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//print details")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name: "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"amount: "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOutstanding")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("解决")])]),t._v(" "),s("p",[t._v("移动这段代码到一个新的函数中，使用函数的调用来替代老代码。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printOwing")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printBanner")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printDetails")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOutstanding")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printDetails")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" outstanding"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name: "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"amount: "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" outstanding"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"以查询取代临时变量-replace-temp-with-query"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#以查询取代临时变量-replace-temp-with-query"}},[t._v("#")]),t._v(" 以查询取代临时变量(Replace Temp with Query)")]),t._v(" "),s("p",[s("strong",[t._v("问题")])]),t._v(" "),s("p",[t._v("将表达式的结果放在局部变量中，然后在代码中使用。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("calculateTotal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" basePrice "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quantity "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" itemPrice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("basePrice "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" basePrice "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.95")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" basePrice "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.98")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("解决")])]),t._v(" "),s("p",[t._v("将整个表达式移动到一个独立的函数中并返回结果。使用查询函数来替代使用变量。如果需要，可以在其他函数中合并新函数。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("calculateTotal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("basePrice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("basePrice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.95")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("basePrice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.98")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("basePrice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" quantity "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" itemPrice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"引入参数对象-introduce-parameter-object-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#引入参数对象-introduce-parameter-object-3"}},[t._v("#")]),t._v(" 引入参数对象(Introduce Parameter Object)")]),t._v(" "),s("p",[s("strong",[t._v("问题")])]),t._v(" "),s("p",[t._v("某些参数总是很自然地同时出现。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/introduce-parameter-object-before.png",alt:""}})]),t._v(" "),s("p",[s("strong",[t._v("解决")])]),t._v(" "),s("p",[t._v("以一个对象来取代这些参数。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/introduce-parameter-object-after.png",alt:""}})]),t._v(" "),s("h4",{attrs:{id:"保持对象完整-preserve-whole-object-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#保持对象完整-preserve-whole-object-3"}},[t._v("#")]),t._v(" 保持对象完整(Preserve Whole Object)")]),t._v(" "),s("p",[s("strong",[t._v("问题")])]),t._v(" "),s("p",[t._v("你从某个对象中取出若干值，将它们作为某一次函数调用时的参数。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" low "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" daysTempRange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getLow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" high "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" daysTempRange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getHigh")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" withinPlan "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" plan"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("withinRange")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("low"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" high"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("strong",[t._v("解决")])]),t._v(" "),s("p",[t._v("改为传递整个对象。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" withinPlan "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" plan"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("withinRange")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("daysTempRange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"以函数对象取代函数-replace-method-with-method-object"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#以函数对象取代函数-replace-method-with-method-object"}},[t._v("#")]),t._v(" 以函数对象取代函数(Replace Method with Method Object)")]),t._v(" "),s("p",[s("strong",[t._v("问题")])]),t._v(" "),s("p",[t._v("你有一个过长函数，它的局部变量交织在一起，以致于你无法应用提炼函数(Extract Method) 。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Order")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("price")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" primaryBasePrice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" secondaryBasePrice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" tertiaryBasePrice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// long computation.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("解决")])]),t._v(" "),s("p",[t._v("将函数移到一个独立的类中，使得局部变量成了这个类的字段。然后，你可以将函数分割成这个类中的多个函数。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Order")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("price")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PriceCalculator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("compute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PriceCalculator")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" primaryBasePrice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" secondaryBasePrice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" tertiaryBasePrice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PriceCalculator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Order")]),t._v(" order"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// copy relevant information from order object.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("compute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// long computation.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"分解条件表达式-decompose-conditional"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分解条件表达式-decompose-conditional"}},[t._v("#")]),t._v(" 分解条件表达式(Decompose Conditional)")]),t._v(" "),s("p",[s("strong",[t._v("问题")])]),t._v(" "),s("p",[t._v("你有复杂的条件表达式。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("before")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SUMMER_START"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("after")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SUMMER_END"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  charge "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quantity "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" winterRate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" winterServiceCharge"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  charge "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quantity "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" summerRate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("解决")])]),t._v(" "),s("p",[t._v("根据条件分支将整个条件表达式分解成几个函数。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("notSummer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  charge "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("winterCharge")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quantity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  charge "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("summerCharge")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quantity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"过长参数列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#过长参数列"}},[t._v("#")]),t._v(" 过长参数列")]),t._v(" "),s("blockquote",[s("p",[t._v("过长参数列(Long Parameter List)")]),t._v(" "),s("p",[t._v("一个函数有超过 3、4 个入参。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/long-parameter-list-1.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"问题原因-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#问题原因-4"}},[t._v("#")]),t._v(" 问题原因")]),t._v(" "),s("p",[t._v("过长参数列可能是将多个算法并到一个函数中时发生的。函数中的入参可以用来控制最终选用哪个算法去执行。")]),t._v(" "),s("p",[t._v("过长参数列也可能是解耦类之间依赖关系时的副产品。例如，用于创建函数中所需的特定对象的代码已从函数移动到调用函数的代码处，但创建的对象是作为参数传递到函数中。因此，原始类不再知道对象之间的关系，并且依赖性也已经减少。但是如果创建的这些对象，每一个都将需要它自己的参数，这意味着过长参数列。")]),t._v(" "),s("p",[t._v("太长的参数列难以理解，太多参数会造成前后不一致、不易使用，而且一旦需要更多数据，就不得不修改它。")]),t._v(" "),s("h3",{attrs:{id:"解决方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[t._v("#")]),t._v(" 解决方案")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/long-parameter-list-2.png",alt:""}})]),t._v(" "),s("ul",[s("li",[t._v("如果向已有的对象发出一条请求就可以取代一个参数，那么你应该使用 "),s("code",[t._v("以函数取代参数(Replace Parameter with Methods)")]),t._v(" 。在这里，，“已有的对象”可能是函数所属类里的一个字段，也可能是另一个参数。")]),t._v(" "),s("li",[t._v("你还可以运用 "),s("code",[t._v("保持对象完整(Preserve Whole Object)")]),t._v(" 将来自同一对象的一堆数据收集起来，并以该对象替换它们。")]),t._v(" "),s("li",[t._v("如果某些数据缺乏合理的对象归属，可使用 "),s("code",[t._v("引入参数对象(Introduce Parameter Object)")]),t._v(" 为它们制造出一个“参数对象”。")])]),t._v(" "),s("h3",{attrs:{id:"收益-5"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#收益-5"}},[t._v("#")]),t._v(" 收益")]),t._v(" "),s("ul",[s("li",[t._v("更易读，更简短的代码。")]),t._v(" "),s("li",[t._v("重构可能会暴露出之前未注意到的重复代码。")])]),t._v(" "),s("h3",{attrs:{id:"何时忽略-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#何时忽略-2"}},[t._v("#")]),t._v(" 何时忽略")]),t._v(" "),s("ul",[s("li",[t._v('这里有一个重要的例外：有时候你明显不想造成"被调用对象"与"较大对象"间的某种依赖关系。这时候将数据从对象中拆解出来单独作为参数，也很合情理。但是请注意其所引发的代价。如果参数列太长或变化太频繁，就需要重新考虑自己的依赖结构了。')])]),t._v(" "),s("h3",{attrs:{id:"重构方法说明-5"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重构方法说明-5"}},[t._v("#")]),t._v(" 重构方法说明")]),t._v(" "),s("h4",{attrs:{id:"以函数取代参数-replace-parameter-with-methods"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#以函数取代参数-replace-parameter-with-methods"}},[t._v("#")]),t._v(" 以函数取代参数(Replace Parameter with Methods)")]),t._v(" "),s("p",[s("strong",[t._v("问题")])]),t._v(" "),s("p",[t._v("对象调用某个函数，并将所得结果作为参数，传递给另一个函数。而接受该参数的函数本身也能够调用前一个函数。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" basePrice "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quantity "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" itemPrice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" seasonDiscount "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSeasonalDiscount")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" fees "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFees")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" finalPrice "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("discountedPrice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("basePrice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" seasonDiscount"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fees"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("strong",[t._v("解决")])]),t._v(" "),s("p",[t._v("让参数接受者去除该项参数，并直接调用前一个函数。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" basePrice "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quantity "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" itemPrice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" finalPrice "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("discountedPrice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("basePrice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"保持对象完整-preserve-whole-object-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#保持对象完整-preserve-whole-object-4"}},[t._v("#")]),t._v(" 保持对象完整(Preserve Whole Object)")]),t._v(" "),s("p",[s("strong",[t._v("问题")])]),t._v(" "),s("p",[t._v("你从某个对象中取出若干值，将它们作为某一次函数调用时的参数。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" low "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" daysTempRange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getLow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" high "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" daysTempRange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getHigh")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" withinPlan "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" plan"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("withinRange")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("low"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" high"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("strong",[t._v("解决")])]),t._v(" "),s("p",[t._v("改为传递整个对象。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" withinPlan "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" plan"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("withinRange")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("daysTempRange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"引入参数对象-introduce-parameter-object-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#引入参数对象-introduce-parameter-object-4"}},[t._v("#")]),t._v(" 引入参数对象(Introduce Parameter Object)")]),t._v(" "),s("p",[s("strong",[t._v("问题")])]),t._v(" "),s("p",[t._v("某些参数总是很自然地同时出现。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/introduce-parameter-object-before.png",alt:""}})]),t._v(" "),s("p",[s("strong",[t._v("解决")])]),t._v(" "),s("p",[t._v("以一个对象来取代这些参数。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/design/refactor/introduce-parameter-object-after.png",alt:""}})]),t._v(" "),s("h2",{attrs:{id:"扩展阅读"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#扩展阅读"}},[t._v("#")]),t._v(" 扩展阅读")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/dunwu/design/blob/master/docs/refactor/%E4%BB%A3%E7%A0%81%E7%9A%84%E5%9D%8F%E5%91%B3%E9%81%93%E5%92%8C%E9%87%8D%E6%9E%84.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("代码的坏味道和重构"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/dunwu/design/blob/master/docs/refactor/%E4%BB%A3%E7%A0%81%E5%9D%8F%E5%91%B3%E9%81%93%E4%B9%8B%E4%BB%A3%E7%A0%81%E8%87%83%E8%82%BF.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("代码坏味道之代码臃肿"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/dunwu/design/blob/master/docs/refactor/%E4%BB%A3%E7%A0%81%E5%9D%8F%E5%91%B3%E9%81%93%E4%B9%8B%E6%BB%A5%E7%94%A8%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("代码坏味道之滥用面向对象"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/dunwu/design/blob/master/docs/refactor/%E4%BB%A3%E7%A0%81%E5%9D%8F%E5%91%B3%E9%81%93%E4%B9%8B%E5%8F%98%E9%9D%A9%E7%9A%84%E9%9A%9C%E7%A2%8D.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("代码坏味道之变革的障碍"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/dunwu/design/blob/master/docs/refactor/%E4%BB%A3%E7%A0%81%E5%9D%8F%E5%91%B3%E9%81%93%E4%B9%8B%E9%9D%9E%E5%BF%85%E8%A6%81%E7%9A%84.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("代码坏味道之非必要的"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/dunwu/design/blob/master/docs/refactor/%E4%BB%A3%E7%A0%81%E5%9D%8F%E5%91%B3%E9%81%93%E4%B9%8B%E8%80%A6%E5%90%88.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("代码坏味道之耦合"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"参考资料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://book.douban.com/subject/4199741/",target:"_blank",rel:"noopener noreferrer"}},[t._v("《代码整洁之道》"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://book.douban.com/subject/4262627/",target:"_blank",rel:"noopener noreferrer"}},[t._v("《重构 - 改善既有代码的设计》"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://book.douban.com/subject/1477390/",target:"_blank",rel:"noopener noreferrer"}},[t._v("《代码大全》"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("https://sourcemaking.com/refactoring")])])])}),[],!1,null,null,null);a.default=n.exports}}]);