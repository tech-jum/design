(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{420:function(t,e,r){"use strict";r.r(e);var o=r(15),a=Object(o.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"分布式系统"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#分布式系统"}},[t._v("#")]),t._v(" 分布式系统")]),t._v(" "),r("blockquote",[r("p",[t._v("大型软件为了应对海量数据、高并发，一般都会被设计为分布式系统。")]),t._v(" "),r("p",[t._v("分布式系统需要解决很多不同领域的问题。")])]),t._v(" "),r("h2",{attrs:{id:"📖-内容"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#📖-内容"}},[t._v("#")]),t._v(" 📖 内容")]),t._v(" "),r("ul",[r("li",[r("RouterLink",{attrs:{to:"/distributed/分布式面试.html"}},[t._v("系统原理面试题")])],1),t._v(" "),r("li",[r("strong",[t._v("基础理论")]),t._v(" "),r("ul",[r("li",[r("RouterLink",{attrs:{to:"/distributed/分布式简介.html"}},[t._v("分布式简介")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/distributed/分布式理论.html"}},[t._v("分布式基础理论")]),t._v(" - 关键词："),r("code",[t._v("拜占庭将军")]),t._v("、"),r("code",[t._v("CAP")]),t._v("、"),r("code",[t._v("BASE")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/distributed/分布式算法Paxos.html"}},[t._v("分布式算法 Paxos")]),t._v(" - 关键词："),r("code",[t._v("共识性算法")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/distributed/分布式算法Raft.html"}},[t._v("分布式算法 Raft")]),t._v(" - 关键词："),r("code",[t._v("共识性算法")])],1)])]),t._v(" "),r("li",[r("strong",[t._v("核心技术")]),t._v(" "),r("ul",[r("li",[r("RouterLink",{attrs:{to:"/distributed/负载均衡.html"}},[t._v("负载均衡")]),t._v(" - 关键词："),r("code",[t._v("轮询")]),t._v("、"),r("code",[t._v("随机")]),t._v("、"),r("code",[t._v("最少连接")]),t._v("、"),r("code",[t._v("源地址哈希")]),t._v("、"),r("code",[t._v("一致性哈希")]),t._v("、"),r("code",[t._v("虚拟 hash 槽")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/distributed/消息队列.html"}},[t._v("消息队列")]),t._v(" - 关键词："),r("code",[t._v("重复消费")]),t._v("、"),r("code",[t._v("消息丢失")]),t._v("、"),r("code",[t._v("消息顺序性")]),t._v("、"),r("code",[t._v("消息积压")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/distributed/分布式存储.html"}},[t._v("分布式存储")]),t._v(" - 关键词："),r("code",[t._v("读写分离")]),t._v("、"),r("code",[t._v("分库分表")]),t._v("、"),r("code",[t._v("迁移")]),t._v("、"),r("code",[t._v("扩容")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/distributed/分布式缓存.html"}},[t._v("分布式缓存")]),t._v(" - 关键词："),r("code",[t._v("进程内缓存")]),t._v("、"),r("code",[t._v("分布式缓存")]),t._v("、"),r("code",[t._v("缓存雪崩")]),t._v("、"),r("code",[t._v("缓存穿透")]),t._v("、"),r("code",[t._v("缓存击穿")]),t._v("、"),r("code",[t._v("缓存更新")]),t._v("、"),r("code",[t._v("缓存预热")]),t._v("、"),r("code",[t._v("缓存降级")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/distributed/分布式锁.html"}},[t._v("分布式锁")]),t._v(" - 关键词："),r("code",[t._v("数据库")]),t._v("、"),r("code",[t._v("Redis")]),t._v("、"),r("code",[t._v("ZooKeeper")]),t._v("、"),r("code",[t._v("互斥")]),t._v("、"),r("code",[t._v("可重入")]),t._v("、"),r("code",[t._v("死锁")]),t._v("、"),r("code",[t._v("容错")]),t._v("、"),r("code",[t._v("自旋尝试")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/distributed/分布式ID.html"}},[t._v("分布式 ID")]),t._v(" - 关键词："),r("code",[t._v("UUID")]),t._v("、"),r("code",[t._v("自增序列")]),t._v("、"),r("code",[t._v("雪花算法")]),t._v("、"),r("code",[t._v("Leaf")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/distributed/分布式事务.html"}},[t._v("分布式事务")]),t._v(" - 关键词："),r("code",[t._v("2PC")]),t._v("、"),r("code",[t._v("3PC")]),t._v("、"),r("code",[t._v("TCC")]),t._v("、"),r("code",[t._v("本地消息表")]),t._v("、"),r("code",[t._v("MQ 消息")]),t._v("、"),r("code",[t._v("SAGA")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/distributed/分布式会话.html"}},[t._v("分布式会话")]),t._v(" - 关键词："),r("code",[t._v("粘性 Session")]),t._v("、"),r("code",[t._v("Session 复制共享")]),t._v("、"),r("code",[t._v("基于缓存的 session 共享")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/distributed/流量控制.html"}},[t._v("流量控制")]),t._v(" - 关键词："),r("code",[t._v("计数器法")]),t._v("、"),r("code",[t._v("时间窗口法")]),t._v("、"),r("code",[t._v("令牌桶法")]),t._v("、"),r("code",[t._v("漏桶法")])],1)])])]),t._v(" "),r("h2",{attrs:{id:"📚-资料"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#📚-资料"}},[t._v("#")]),t._v(" 📚 资料")]),t._v(" "),r("h3",{attrs:{id:"分布式理论"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#分布式理论"}},[t._v("#")]),t._v(" 分布式理论")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://static.googleusercontent.com/media/research.google.com/en//archive/gfs-sosp2003.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("The Google File System"),r("OutboundLink")],1),t._v("：Google 三大经典论文之一")]),t._v(" "),r("li",[r("a",{attrs:{href:"https://static.googleusercontent.com/media/research.google.com/en//archive/bigtable-osdi06.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("Bigtable: A Distributed Storage System for Structured Data"),r("OutboundLink")],1),t._v("：Google 三大经典论文之一")]),t._v(" "),r("li",[r("a",{attrs:{href:"https://static.googleusercontent.com/media/research.google.com/en//archive/mapreduce-osdi04.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("MapReduce: Simplifed Data Processing on Large Clusters"),r("OutboundLink")],1),t._v("：Google 三大经典论文之一")]),t._v(" "),r("li",[r("a",{attrs:{href:"https://book.douban.com/subject/11691266/",target:"_blank",rel:"noopener noreferrer"}},[t._v("分布式系统原理与范型"),r("OutboundLink")],1),t._v("：书原名 Distributed Systems Principles and Paradigms。经典分布式教程，介绍了分布式系统的七大核心原理，并给出了大量的例子；系统讲述了分布式系统的概念和技术，包括通信、进程、命名、同步化、一致性和复制、容错以及安全等。")]),t._v(" "),r("li",[r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Fallacies_of_distributed_computing",target:"_blank",rel:"noopener noreferrer"}},[t._v("The fallacies of distributed computing"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"http://book.mixu.net/distsys/single-page.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Distributed Systems for fun and profit"),r("OutboundLink")],1),t._v("：全书分为五章，讲述了扩展性、可用性、性能和容错等基础知识，FLP 不可能性和 CAP 定理，探讨了大量的一致性模型；讨论了时间和顺序，及时钟的各种用法。随后，探讨了复制问题，如何防止差异，以及如何接受差异。此外，每章末尾都给出了针对本章内容的扩展阅读资源列表，这些资料是对本书内容的很好补充。")])]),t._v(" "),r("h3",{attrs:{id:"分布式算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#分布式算法"}},[t._v("#")]),t._v(" 分布式算法")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("Paxos")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://research.microsoft.com/en-us/um/people/lamport/pubs/lamport-paxos.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("Part-time Parliament 论文"),r("OutboundLink")],1),t._v(" - Lamport 的 Paxos 论文。这篇论文很权威，但较为晦涩难懂。")]),t._v(" "),r("li",[r("a",{attrs:{href:"https://lamport.azurewebsites.net/pubs/paxos-simple.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("Paxos Made Simple 论文"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/31780743",target:"_blank",rel:"noopener noreferrer"}},[t._v("Paxos 算法详解"),r("OutboundLink")],1)]),t._v(" "),r("li",[t._v("Neat Algorithms - Paxos")]),t._v(" "),r("li",[r("a",{attrs:{href:"https://zh.wikipedia.org/w/index.php?title=Paxos%E7%AE%97%E6%B3%95",target:"_blank",rel:"noopener noreferrer"}},[t._v("Wiki - Paxos 算法"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://www.bilibili.com/video/BV1TW411M7Fx?from=search&seid=11524608198747599965",target:"_blank",rel:"noopener noreferrer"}},[t._v("一致性算法（Paxos、Raft、Zab）"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://www.bilibili.com/video/av36556594",target:"_blank",rel:"noopener noreferrer"}},[t._v("Raft 作者讲解 Paxos 视频"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=d7nAGI_NZPk",target:"_blank",rel:"noopener noreferrer"}},[t._v("Paxos 算法讲解视频"),r("OutboundLink")],1)])])]),t._v(" "),r("li",[r("strong",[t._v("Raft")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://ramcloud.atlassian.net/wiki/download/attachments/6586375/raft.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("Raft 一致性算法论文原文"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/maemual/raft-zh_cn/blob/master/raft-zh_cn.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Raft 一致性算法论文译文"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=YbZ3zDzDnrw&feature=youtu.be",target:"_blank",rel:"noopener noreferrer"}},[t._v("Raft 作者讲解视频"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"http://www2.cs.uh.edu/~paris/6360/PowerPoint/Raft.ppt",target:"_blank",rel:"noopener noreferrer"}},[t._v("Raft 作者讲解视频对应的 PPT"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/32052223",target:"_blank",rel:"noopener noreferrer"}},[t._v("Raft 算法详解"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"http://thesecretlivesofdata.com/raft",target:"_blank",rel:"noopener noreferrer"}},[t._v("Raft: Understandable Distributed Consensus"),r("OutboundLink")],1),t._v(" - 一个动画教程")]),t._v(" "),r("li",[r("a",{attrs:{href:"https://raft.github.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("The Raft Consensus Algorithm"),r("OutboundLink")],1),t._v(" - 一个交互式动画教程")])])])]),t._v(" "),r("h3",{attrs:{id:"分布式架构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#分布式架构"}},[t._v("#")]),t._v(" 分布式架构")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/aphyr/distsys-class",target:"_blank",rel:"noopener noreferrer"}},[t._v("An introduction to distributed systems"),r("OutboundLink")],1),t._v(" - 这是一份分布式系统的提纲挈领的介绍，几乎涵盖了所有知识点，并辅以简洁并切中要害的说明文字，适合初学者了解知识全貌，快速与现有知识结合，形成知识体系。")])]),t._v(" "),r("h2",{attrs:{id:"🚪-传送"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#🚪-传送"}},[t._v("#")]),t._v(" 🚪 传送")]),t._v(" "),r("p",[t._v("◾ 🏠 "),r("a",{attrs:{href:"https://github.com/dunwu/design",target:"_blank",rel:"noopener noreferrer"}},[t._v("DESIGN 首页"),r("OutboundLink")],1),t._v(" ◾ 🎯 "),r("a",{attrs:{href:"https://github.com/dunwu/blog",target:"_blank",rel:"noopener noreferrer"}},[t._v("我的博客"),r("OutboundLink")],1),t._v(" ◾")])])}),[],!1,null,null,null);e.default=a.exports}}]);